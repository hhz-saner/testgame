name: server
on:
  push:
    paths:
      - "server/**"
  pull_request:
    paths:
      - "server/**"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: install coscmd
        run: sudo pip install coscmd

      - name: Configure coscmd
        env:
          SECRET_ID: ${{secrets.SECRET_ID}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          BUCKET: static-1256271987
          REGION: ap-beijing
        run: coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION

      - name: Build
        run: |
          cd server
          go build -ldflags "-s -w" -o main -v main.go

      - name: upload
        run: |
          cd server
          coscmd upload -r ./main /tmp/main

      - name: Deploy to server
        env:
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_TARGET: ${{ secrets.REMOTE_TARGET }}
        run: |
          mkdir -p $HOME/.ssh/
          echo "$SERVER_SSH_KEY" > $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa
          ssh-keyscan $REMOTE_HOST >> $HOME/.ssh/known_hosts
          cd server
          downloadurl=`coscmd signurl /tmp/main`
          ssh $REMOTE_USER@$REMOTE_HOST "service game-log stop"
          ssh $REMOTE_USER@$REMOTE_HOST "wget $downloadurl -O $REMOTE_TARGET"
          ssh $REMOTE_USER@$REMOTE_HOST "service game-log start && service game-log status"
